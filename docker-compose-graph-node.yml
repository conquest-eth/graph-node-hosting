version: "3.3"

services:
  graph-node:
    image: graphprotocol/graph-node
    container_name: "graph-node"
    ports:
      - "8000:80" # expose queries as 80
      # - '8001:8001'
      - "8020:8020" #expose admin api on 8020
      # - '8030:8030'
      # - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "${ETHEREUM_NETWORK}:${ETHEREUM_NODE}"

  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    container_name: "ipfs"
    # ports:
    #   - '5001:5001'
    #   - '8080:8080'
    #   - '8081:8081'
    #   - '4001:4001'
    volumes:
      - "./data/ipfs:/data/ipfs"

  postgres:
    image: postgres
    container_name: "postgres"
    # ports:
    #   - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
